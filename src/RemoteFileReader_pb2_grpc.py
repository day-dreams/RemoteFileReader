# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import RemoteFileReader_pb2 as RemoteFileReader__pb2


class RemoteFileRreaderServiceStub(object):
  """The remote file read service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.exists = channel.unary_unary(
        '/RemoteFileRreaderService/exists',
        request_serializer=RemoteFileReader__pb2.File.SerializeToString,
        response_deserializer=RemoteFileReader__pb2.FileStatus.FromString,
        )
    self.read = channel.unary_stream(
        '/RemoteFileRreaderService/read',
        request_serializer=RemoteFileReader__pb2.File.SerializeToString,
        response_deserializer=RemoteFileReader__pb2.FileLine.FromString,
        )
    self.get_all_filestatus = channel.unary_stream(
        '/RemoteFileRreaderService/get_all_filestatus',
        request_serializer=RemoteFileReader__pb2.EmptyRequest.SerializeToString,
        response_deserializer=RemoteFileReader__pb2.FileStatus.FromString,
        )


class RemoteFileRreaderServiceServicer(object):
  """The remote file read service definition.
  """

  def exists(self, request, context):
    """query whether the file exists
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def read(self, request, context):
    """read the file,if file not exists,line will be empty
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get_all_filestatus(self, request, context):
    """get all logic_filename
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RemoteFileRreaderServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'exists': grpc.unary_unary_rpc_method_handler(
          servicer.exists,
          request_deserializer=RemoteFileReader__pb2.File.FromString,
          response_serializer=RemoteFileReader__pb2.FileStatus.SerializeToString,
      ),
      'read': grpc.unary_stream_rpc_method_handler(
          servicer.read,
          request_deserializer=RemoteFileReader__pb2.File.FromString,
          response_serializer=RemoteFileReader__pb2.FileLine.SerializeToString,
      ),
      'get_all_filestatus': grpc.unary_stream_rpc_method_handler(
          servicer.get_all_filestatus,
          request_deserializer=RemoteFileReader__pb2.EmptyRequest.FromString,
          response_serializer=RemoteFileReader__pb2.FileStatus.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'RemoteFileRreaderService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
